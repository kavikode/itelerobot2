// Auto-generated. Do not edit!

// (in-package grasping_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class FindGraspableObjectsGoal {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.plan_grasps = null;
    }
    else {
      if (initObj.hasOwnProperty('plan_grasps')) {
        this.plan_grasps = initObj.plan_grasps
      }
      else {
        this.plan_grasps = false;
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type FindGraspableObjectsGoal
    // Serialize message field [plan_grasps]
    bufferOffset = _serializer.bool(obj.plan_grasps, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type FindGraspableObjectsGoal
    let len;
    let data = new FindGraspableObjectsGoal(null);
    // Deserialize message field [plan_grasps]
    data.plan_grasps = _deserializer.bool(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    return 1;
  }

  static datatype() {
    // Returns string type for a message object
    return 'grasping_msgs/FindGraspableObjectsGoal';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '4aadd364d1b04bf1e9e9fdbdce5637d4';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    ###########################################################
    # This action is called for integrated object detection and
    #  grasp planning, such as in base_grasping_perception
    
    # Set to false to disable grasp planning, returning only the objects found
    bool plan_grasps
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new FindGraspableObjectsGoal(null);
    if (msg.plan_grasps !== undefined) {
      resolved.plan_grasps = msg.plan_grasps;
    }
    else {
      resolved.plan_grasps = false
    }

    return resolved;
    }
};

module.exports = FindGraspableObjectsGoal;
